name: Authentication Service

on:
  # run it on push to the default repository branch
  push:
    branches: [main]
    paths: 'authentication-service/**'

jobs:
  build-test-and-push-image:
    name: Build and test image and push to cloud
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0
          
      - name: Install dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build
        
      - name: Test
        run: dotnet test
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./authentication-service/AuthenticationService

          # Note: tags has to be all lower-case
          tags: dennycox/authentication-service:latest

          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1
        with:
          # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
          creds: ${{secrets.AZURE_CREDENTIALS}}
          # Resource Group Name
          resource-group: Kwetter-i4034511
          # AKS Cluster Name
          cluster-name: kwetter-cluster

      # Create K8s secrets to pull images
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v1.1
        with:
          # Container registry url
          container-registry-url: https://index.docker.io/v1/
          # Container registry username
          container-registry-username: ${{secrets.DOCKERHUB_USERNAME}}
          # Container registry password
          container-registry-password:  ${{secrets.DOCKERHUB_TOKEN}}
          # Type of Kubernetes secret. For example, docker-registry or generic
          secret-type: docker-registry
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: docker-image-pull-secret

      # Deploy to k8s cluster
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1
        with:        
          # Path to the manifest files which will be used for deployment.
          manifests: |
            kubernetes/authentication.yaml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          images: dennycox/authentication-service:latest
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: docker-image-pull-secret
          # deploy/promote/reject
          action: deploy
